<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>